<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>